<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>